<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>